<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>